<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>